<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>